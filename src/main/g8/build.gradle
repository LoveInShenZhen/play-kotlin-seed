plugins {
    id "play"
}


repositories {
    maven {
        name "aliyun-maven"
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    jcenter()
    ivy {
        name "typesafe-ivy-release"
        url "https://repo.typesafe.com/typesafe/ivy-releases"
        layout "ivy"
    }
}

def playVersion = '$PlayVersion$'
def scalaVersion = '2.11'
def kotlin_version = '$KotlinVersion$'

model {
    components {
        play {
            platform play: playVersion, scala: scalaVersion, java: '1.8'
            injectedRoutesGenerator = true

            sources {
                twirlTemplates {
                    defaultImports = TwirlImports.JAVA
                }
            }
        }
    }
}

dependencies {
    // play fileTree(dir: 'libs', include: '*.jar')
    ['filters-helpers', 'play-logback'].each { playModule ->
        play "com.typesafe.play:\${playModule}_\$scalaVersion:\$playVersion"
    }

    play group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: "\$kotlin_version"
    play group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "\$kotlin_version"

    play project(':subProjects:$sharedToolsPrjName$')
    play project(':subProjects:$subBizProjectName$')
}

tasks.withType(CreateStartScripts) {
    it.unixStartScriptGenerator.template = resources.text.fromFile('unixStartScript.txt')
    it.applicationName = '$name$'
    it.mainClassName = 'play.core.server.ProdServerStart'
}

tasks.withType(org.gradle.play.tasks.PlayRun) {
    it.httpPort = 9000
    if (project.hasProperty("debug")) {
        def debugPort = "9999"
        if (project.findProperty("debug").toString().isNumber()) {
            debugPort = project.findProperty("debug").toString()
        }
        it.forkOptions.jvmArgs.add("-Xdebug")
        it.forkOptions.jvmArgs.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=\${debugPort}")
        println("\u001b[35m" + "Remote debug is enabled. debug port: \${debugPort}" + "\u001b[0m")
    }

    // def unManagedJars = fileTree(dir: 'subProjects/$subBizProjectName$/libs', include: '*.jar').asPath
    // it.forkOptions.jvmArgs.add("-DunManagedJars=\$unManagedJars")
}
